services:
  db:
    image: postgres:latest
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - ./data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - toyota-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - toyota-network

  kafka_broker:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-broker
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka_broker:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - toyota-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka_broker
    ports:
      - "8082:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka_broker:9092
    networks:
      - toyota-network

# ------------
# Opensearch and dashboard
# ------------
  opensearch:
    image: opensearchproject/opensearch:latest
    container_name: opensearch
    environment:
      discovery.type: single-node
      OPENSEARCH_JAVA_OPTS: "-Xms512m -Xmx512m"
      bootstrap.memory_lock: true
      OPENSEARCH_INITIAL_ADMIN_PASSWORD: Aloha.32bit
    ports:
      - "9200:9200" #For rest api
      - "9600:9600"
    networks:
      - toyota-network

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest
    container_name: opensearch-dashboard
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch:9200"]'
      SERVER_HOST: "0.0.0.0"
      OPENSEARCH_USERNAME: admin
      OPENSEARCH_PASSWORD: Aloha.32bit
      OPENSEARCH_SSL_VERIFICATIONMODE: none
    ports:
      - "5601:5601"
    networks:
      - toyota-network
    depends_on:
      - opensearch

# ---------------
# For saving logs
# ---------------
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.1
    container_name: elasticsearch
    environment:
      discovery.type: single-node
      xpack.security.enabled: false
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    ports:
      - "9201:9200"
    networks:
      - toyota-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.12.1
    container_name: kibana
    ports:
      - "5602:5601"
    depends_on:
      - elasticsearch
    networks:
      - toyota-network

# -----------------------------
# Sendind logs to elasticsearch
# -----------------------------
  filebeat:
    image: docker.elastic.co/beats/filebeat:7.12.1
    container_name: filebeat
    user: root
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./Main-Platform/logs:/logs:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - elasticsearch
    networks:
      - toyota-network

# ------------
# Rate Servers
# ------------
  rest-api-platform:
    build:
      context: ./Rest-Api-Platform
    container_name: rest-api-platform
    ports:
      - "8080:8080"
    networks:
      - toyota-network

  tcp-platform:
    build:
      context: ./TCP-Platform
    container_name: tcp-server-platform
    ports:
      - "8081:8081"
    networks:
      - toyota-network

# --------
# Main APP
# --------
  main-platform:
    build:
      context: ./Main-Platform
    container_name: main-platform
    depends_on:
      - kafka_broker
    mem_limit: 512m
    volumes:
      - ./Main-Platform/logs:/logs
    ports:
      - "8083:8080"
    networks:
      - toyota-network

# ------------------
# Kafka consumer app
# ------------------
  kafka_consumer_app:
    build:
      context: ./Kafka
    container_name: kafka-consumer-app
    depends_on:
      - db
      - kafka_broker
      - opensearch
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka_broker:9092
    networks:
      - toyota-network

networks:
  toyota-network:
    driver: bridge